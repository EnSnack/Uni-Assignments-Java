#BlueJ class context
comment0.target=Country
comment0.text=\r\n\ Represents\ a\ whole\ country\ including\ all\ the\ cities\ and\ roads\ in\ it.\r\n\ The\ cities\ and\ roads\ are\ represented\ by\ a\ HashMap.\r\n\r\n\ @author\ Steffen\ W.\ Christensen\r\n\ @version\ 17/11-2018\ 17\:00,\ version\ 1.1\r\n
comment1.params=name\ network
comment1.target=Country(java.lang.String,\ java.util.Map)
comment1.text=\r\n\ Constructor\ for\ the\ Country\ object.\r\n\ @param\ name\ \ \ \ \ \ \ The\ country's\ name.\r\n\ @param\ network\ \ \ \ The\ network\ of\ Cities\ and\ Roads\ in\ this\ Country.\r\n
comment10.params=city
comment10.target=Position\ position(City)
comment10.text=\r\n\ Returns\ a\ new\ Position\ object\ of\ a\ specific\ city.\r\n\ @param\ city\ \ \ \ City\ to\ make\ a\ position\ of.\r\n\ @return\ \ \ \ \ \ \ \ Position\ object\ of\ city.\r\n
comment11.params=from\ to
comment11.target=Position\ readyToTravel(City,\ City)
comment11.text=\r\n\ Checks\ if\ the\ player\ is\ currently\ ready\ to\ travel\ between\ from\ and\ to.\r\n\ It\ does\ this\ through\ two\ if\ statements\:\r\n\ Is\ the\ City\ in\ the\ country\ and\ is\ there\ a\ road\ between\ the\ two?\r\n\ @param\ from\ \ \ \ City\ to\ travel\ from.\r\n\ @param\ to\ \ \ \ \ \ City\ to\ travel\ to.\r\n\ @return\ \ \ \ \ \ \ \ New\ Position\ object\ between\ from\ and\ to.\r\n
comment12.params=
comment12.target=Game\ getGame()
comment12.text=\r\n\ Returns\ the\ current\ game\ object,\r\n\ @return\ \ \ The\ current\ Game\ object.\r\n
comment13.params=game
comment13.target=void\ setGame(Game)
comment13.text=\r\n\ Sets\ the\ current\ game\ object.\r\n\ @param\ \ \ Game\ object\ to\ set.\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Returns\ the\ current\ Country's\ name,\r\n\ for\ example,\ "Country\ 1".\r\n\ @return\ \ \ The\ Country's\ name.\r\n
comment3.params=
comment3.target=java.util.Map\ getNetwork()
comment3.text=\r\n\ Returns\ the\ current\ Country's\ network,\r\n\ this\ includes\ all\ Cities\ and\ Roads\ in\ the\ Country.\r\n\ @return\ \ \ The\ Country's\ network.\r\n
comment4.params=c
comment4.target=java.util.List\ getRoads(City)
comment4.text=\r\n\ Returns\ the\ current\ Country's\ roads\ based\ on\ the\ parameter,\r\n\ this\ means\ if\ the\ City\ can\ be\ found,\ all\ Roads\ starting\ from\ City\ c\ is\ returned.\r\n\ If\ the\ City\ cannot\ be\ found,\ an\ empty\ list\ is\ returned.\r\n\ @param\ c\ \ \ \ The\ City\ to\ lookup\ roads\ from.\r\n\ @return\ \ \ \ \ The\ Roads\ starting\ from\ City\ c,\ or\ empty\ list.\r\n
comment5.params=
comment5.target=java.util.List\ getCities()
comment5.text=\r\n\ Returns\ a\ sorted\ list\ of\ all\ cities\ in\ the\ Country.\r\n\ If\ no\ cities\ are\ to\ be\ found,\ an\ empty\ list\ is\ returned\ instead.\r\n\ @return\ \ \ \ All\ cities\ in\ the\ country,\ or\ empty\ list.\r\n
comment6.params=name
comment6.target=City\ getCity(java.lang.String)
comment6.text=\r\n\ Finds\ a\ city\ among\ the\ list\ of\ cities\ by\ looking\ for\ its\ name.\r\n\ If\ no\ such\ city\ can\ be\ found,\ null\ is\ returned\ instead.\r\n\ @param\ name\ \ \ \ The\ name\ of\ the\ city\ to\ be\ found.\r\n\ @return\ \ \ \ \ \ \ \ The\ city\ that\ was\ found,\ or\ null.\r\n
comment7.params=
comment7.target=void\ reset()
comment7.text=\r\n\ Resets\ all\ cities'\ values\ in\ the\ Country\ to\ their\ initial\ values.\r\n
comment8.params=value
comment8.target=int\ bonus(int)
comment8.text=\r\n\ Returns\ the\ bonus\ value\ a\ player\ should\ receive\ when\ arriving\ to\ the\ city,\r\n\ as\ long\ as\ the\ given\ value\ is\ above\ 0.\r\n\ @param\ value\ \ \ \ The\ upper\ limit\ of\ the\ random\ number.\r\n\ @return\ \ \ \ \ \ \ \ \ A\ random\ number\ between\ [0,value],\ or\ 0.\r\n
comment9.params=a\ b\ length
comment9.target=void\ addRoads(City,\ City,\ int)
comment9.text=\r\n\ Adds\ a\ road,\ or\ multiple\ roads,\ from\ City\ a\ to\ City\ b\ of\ length.\r\n\ If\ a\ and\ b\ are\ in\ same\ country,\ create\ a\ Road\ object\ from\ and\ to\ a\ and\ b.\r\n\ If\ only\ a\ or\ b\ is\ in\ the\ country,\ create\ a\ one-direction\ Road\ object\ starting\ from\ which\ one\ is\ in\ the\ country.\r\n\ @param\ a\ \ \ \ \ \ \ \ \ The\ first\ City\ object.\r\n\ @param\ b\ \ \ \ \ \ \ \ \ The\ second\ City\ object.\r\n\ @param\ length\ \ \ \ Length\ between\ the\ two\ cities.\r\n
numComments=14
